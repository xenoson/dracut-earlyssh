#!/bin/sh
# -*- mode: shell-script; indent-tabs-mode: nil; sh-basic-offset: 4; -*-
# ex: ts=8 sw=4 sts=4 et filetype=sh

#
# Based on code, examples and ideas from:
#  https://bugzilla.redhat.com/show_bug.cgi?id=524727
#  http://roosbertl.blogspot.de/2012/12/centos6-disk-encryption-with-remote.html
#  https://bitbucket.org/bmearns/dracut-crypt-wait
#  http://forum.ubuntuusers.de/topic/script-verschluesseltes-system-via-ssh-freisch/
#  debian initramfs-tools scripts and dracut scripts
#
#
# Start dropbear sshd to be able to send password to waiting cryptsetup
#  (from "crypt" module) remotely, or for any other kind of net-debug of dracut.
#
# Boot sshd will be started with:
#  port: ${dropbear_port} (dracut.conf) or 2222
#  user: root
#  host key: ${dropbear_rsa_key} (dracut.conf) or generated (fingerprint echoed)
#  client key(s): ${dropbear_acl} (dracut.conf) or /root/.ssh/authorized_keys
#  no password auth, no port forwarding

## For an explanation of dracut modules and their format please see:
##      https://www.kernel.org/pub/linux/utils/boot/dracut/dracut.html


check() {
        type -P dropbear >/dev/null || return 1
        return 0
}

depends() {
        echo network
        return 0
}

install() {

        local dracut_dropbear_config_file="/etc/dracut.conf.d/dropbear.conf"
        [ -s "${dracut_dropbear_config_file}" ] && . ${dracut_dropbear_config_file}

        ## Check for dracut.conf parameters
        if [ -z "${dropbear_port}" ]
        then
          dropbear_port="22222"
          dinfo "dropbear_port not set in ${dracut_dropbear_config_file}, using default (${dropbear_port})"
cat >> ${dracut_dropbear_config_file} <<EOF
#droppear sshd listen port
dropbear_port=${dropbear_port}

EOF

        fi
        
        dropbear_port=$(printf %d $dropbear_port)
        if [ $? -gt 0 ]
        then
                dfatal "Value dropbear_port= in ${dracut_dropbear_config_file} is not an integer number"
                return 1
        fi
        if [ $dropbear_port -gt 65535 ]
        then
                dfatal "Value dropbear_port= in ${dracut_dropbear_config_file} is higher than allowed port number of 65535"
                return 1
        fi

        if [ -z "${dropbear_rsa_key}" ]
        then 
          ## 
          dropbear_rsa_key="/etc/dropbear/dropbear_rsa_host_key"
          dinfo "dropbear_rsa_key not set in ${dracut_dropbear_config_file}, using default (${dropbear_rsa_key})"
cat >> ${dracut_dropbear_config_file} <<EOF
#droppear sshd rsa host key file (will be generated if file does not exist)
dropbear_rsa_key="${dropbear_rsa_key}"

EOF
        fi

        if [ -z "${dropbear_acl}" ]
        then
          dropbear_acl="/root/.ssh/authorized_keys"
          dinfo "dropbear_acl not set in ${dracut_dropbear_config_file}, using default location (${dropbear_acl})"
cat >> ${dracut_dropbear_config_file} <<EOF
#droppear sshd authorized puplic key file for login (no password logins are allowed, use ssh-copy-id to deploy key before)
dropbear_acl="${dropbear_acl}"

EOF
        fi
        
        echo "Checking authorized public key, is the following the correct fingerprint for initramfs SSH access?"
        if ! ssh-keygen -l -f ${dropbear_acl}
        then
                dfatal "Value dropbear_acl= in ${dracut_dropbear_config_file} is wrong or file does not contain a valid public key"
                return 1
        fi

        if [ ! -f ${dropbear_rsa_key} ]
        then
          #$moddir/keygen.sh ${dropbear_rsa_key}
          dropbearkey -t rsa -f "${dropbear_rsa_key}"
        elif ! dropbearconvert dropbear openssh "${dropbear_rsa_key}" /dev/null >/dev/null 2>&1
        then
                dfatal "Value dropbear_rsa_key= in ${dracut_dropbear_config_file} is wrong or file  does not contain a valid host key"
                return 1
        fi

        #https://www.freedesktop.org/software/systemd/man/systemd.service.html
        dracut_dropbear_systemd_service=/etc/dracut.conf.d/dracut_dropbear.service
cat >    ${dracut_dropbear_systemd_service} <<EOF
#do not edit this file, it will be auto generated by dracut for inclusion in initramfs
#based on configuration settings in ${dracut_dropbear_config_file}
#
#to rebuild initramfs
#dracut --kver $(uname -r) --force
#to unpack for checking
#/usr/lib/dracut/skipcpio /boot/initramfs-$(uname -r).img | zcat | cpio -idm

[Unit]
Description=Initial Ramdisk Dropbear SSH Server Daemon
Documentation=man:dropbear(8)
AssertFileNotEmpty=${dropbear_acl}
AssertFileNotEmpty=${dropbear_rsa_key}
#Before=cryptsetup.target
Before=dracut-initqueue.service
#After=systemd-ask-password-plymouth.path

[Service]
ExecStart=/usr/sbin/dropbear -E -F -m -s -j -k -p ${dropbear_port} -r "${dropbear_rsa_key}" -P /var/run/dropbear.pid
PIDFile=/var/run/dropbear.pid

EOF

        dracut_install dropbear
        dracut_install /lib64/libnss_files.so.2
        inst ${dropbear_acl} /root/.ssh/authorized_keys
        inst ${dropbear_rsa_key} ${dropbear_rsa_key}
        inst_simple "${dracut_dropbear_systemd_service}" ${systemdsystemunitdir}/dracut-dropbear.service
        inst_hook initqueue/online 52 "$moddir/start-dropbear.sh"
        inst_hook cleanup 02 "$moddir/kill-dropbear.sh"

        inst_script "$moddir/unlock.sh" /bin/unlock
        
        unset dropbear_port dropbear_acl dropbear_rsa_key

}